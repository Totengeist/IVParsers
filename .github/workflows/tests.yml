name: tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.runner }}

    strategy:
        fail-fast: true
        matrix:
            php: ['5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
            runner: ['ubuntu-20.04', 'ubuntu-22.04']

    name: PHP ${{ matrix.php }} on ${{ matrix.runner }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        coverage: xdebug

    - name: Report PHP version
      run: php -v

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Get Composer Cache Directory
      id: composer-cache-restore
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - name: Restore Composer Cache Directory
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.composer-cache-restore.outputs.dir }}
        key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Save Composer Cache
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.composer-cache-restore.outputs.dir }}
        key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}

    - name: Run test suite
      run: composer test
      if: ${{ matrix.php != '5.3' && matrix.php != '5.4' && matrix.php != '5.5' && matrix.php != '8.2' }}

    - name: Run test suite
      run: vendor/bin/phpunit --verbose
      if: ${{ matrix.php == '5.3' || matrix.php == '5.4' || matrix.php == '5.5' }}

    - name: Run test suite
      run: vendor/bin/phpunit --verbose --coverage-clover ./coverage.xml
      if: ${{ matrix.php == '8.2' }}
      env:
        XDEBUG_MODE: coverage

    - name: Upload to Codecov
      uses: codecov/codecov-action@v2
      if: ${{ matrix.php == '8.2' && matrix.runner == 'ubuntu-22.04' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        verbose: true

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      if: ${{ matrix.php == '8.2' && matrix.runner == 'ubuntu-22.04' }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
